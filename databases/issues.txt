INSERT INTO PERSON(PID, Name, Birthdate, Gender, birthplace, Attribute) VALUES('P17', 'Matt Damon', TO_DATE('1/7/71','mm/dd/yyyy'), 'M', 'Seattle', 'Actor');

INSERT INTO ROLES VALUES('M9', 'P17', 'Martin')

_____

Q5.

CREATE VIEW CAST_SIZE_VIEW AS
SELECT MOVIE, COUNT(DISTINCT(PERSON)) AS CAST_SIZE
FROM ROLES 
GROUP BY MOVIE
HAVING COUNT(DISTINCT(PERSON)) = (SELECT MAX(COUNT(DISTINCT(PERSON))) FROM ROLES GROUP BY MOVIE);
(semi colon missing)

SELECT M.NAME, V.CAST_SIZE
FROM MOVIE M, CAST_SIZE_VIEW V
WHERE M.MID = V.MOVIE;

_______

Q7. CREATE VIEW RATING_VIEW AS
SELECT MOVIE, AVG(RATING) AS RATING
FROM REVIEWS 
GROUP BY MOVIE;

CREATE VIEW FILTERED_RATING_VIEW AS
SELECT M.NAME AS MNAME, M.YEAR, V.RATING
FROM MOVIE M, RATING_VIEW V
WHERE M.MID = V.MOVIE
AND M.YEAR >= 2005; (semi colon missing)

SELECT * FROM FILTERED_RATING_VIEW V
WHERE RATING = (SELECT MAX(RATING) FROM FILTERED_RATING_VIEW V2 GROUP BY YEAR HAVING V.YEAR=V2.YEAR)
ORDER BY YEAR, MNAME;

_________

**didn't copy updated code

Q8. CREATE VIEW TOP_RATED_ACTORS AS
SELECT NAME, PID  (didn't retrieve PID)
FROM PERSON
WHERE PID IN
(SELECT ACTOR FROM MOVIE_ACTOR_LIST WHERE MID IN (SELECT MOVIE FROM REVIEWS GROUP BY MOVIE HAVING AVG(RATING) >= 8 ));

SELECT COUNT(*) FROM TOP_RATED_ACTORS A WHERE A.NAME NOT IN (SELECT NAME FROM LOW_RATED_ACTORS); (works on select name)